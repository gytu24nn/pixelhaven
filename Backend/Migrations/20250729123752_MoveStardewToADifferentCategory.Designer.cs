// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250729123752_MoveStardewToADifferentCategory")]
    partial class MoveStardewToADifferentCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Games", b =>
                {
                    b.Property<long>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("GameId"));

                    b.Property<string>("GameDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GameGenre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GameTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("GamesCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GameId");

                    b.HasIndex("GamesCategoryId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = 1L,
                            GameDescription = "A farming simulation game where you can grow crops, raise animals, and build your farm.",
                            GameGenre = "RPG",
                            GameTitle = "Stardew Valley",
                            GamesCategoryId = 3L,
                            ImageUrl = "img/stardew_valley.jpg",
                            ReleaseDate = new DateTime(2016, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 2L,
                            GameDescription = "An action-adventure game set in the American Wild West, focusing on the life of an outlaw.",
                            GameGenre = "Action",
                            GameTitle = "Red Dead Redemption 2",
                            GamesCategoryId = 1L,
                            ImageUrl = "img/RDR2.jpg",
                            ReleaseDate = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Backend.Models.GamesCategory", b =>
                {
                    b.Property<long>("GamesCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("GamesCategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("GamesCategoryId");

                    b.ToTable("GamesCategories");

                    b.HasData(
                        new
                        {
                            GamesCategoryId = 1L,
                            CategoryName = "RPG"
                        },
                        new
                        {
                            GamesCategoryId = 2L,
                            CategoryName = "Action"
                        },
                        new
                        {
                            GamesCategoryId = 3L,
                            CategoryName = "Indie games"
                        },
                        new
                        {
                            GamesCategoryId = 4L,
                            CategoryName = "Simulation"
                        });
                });

            modelBuilder.Entity("Backend.Models.Games", b =>
                {
                    b.HasOne("Backend.Models.GamesCategory", "GamesCategory")
                        .WithMany("Games")
                        .HasForeignKey("GamesCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GamesCategory");
                });

            modelBuilder.Entity("Backend.Models.GamesCategory", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
